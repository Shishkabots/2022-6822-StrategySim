## alliance area: 30ft(914cm) by 8ft 10in(269cm)
## 
import random


app.instructions = app.getTextInput('Click a robot to control it. Use arrow keys to move the robot. Click "1" to shoot a ball that you picked up by having the robot run into the ball. A max of 2 balls can be picked up. If the ball shot is the same color as the robot, 1 point will ba awarded when "1" is pressed. If not, the ball will be shot a small distance in the direction the robot is facing. "2" shoots the same color ball into the upper hub, and a different color ball will be shot a distance that the user inputs. Also, you can create new blue or red balls by clicking "b" or "r". After pressing, click on the field to add a ball. Repeat this for each ball created.')
app.max = int(app.getTextInput('How far will the ball be shot when 2 is pressed? Remember to scale for the field width to be 400 and a shot into the lower hub distance shot until the ball stops is 25.'))

field = Rect(0, 100, 400, 200, fill = "grey")

midline = Line(160, 100, 240, 300)
hub = Rect(175, 175, 50, 50, rotateAngle = -66, fill = None, border = 'black')

bTerminal = Polygon(400, 142, 400, 100, 358, 100, fill = "white")
rTerminal = Polygon(0, 258, 42, 300, 0, 300, fill = "white")

bHanger = Group(Rect(0, 100, 79.4654, 71.6889, border = "blue", fill = None),
            Line(83, 100, 83, 171.6889),
            Line(83-9-22.4787+2.5, 100, 83-22.4787-9+2.5, 171.6889),
            Line(83-9-22.4787-14.8238+2.5, 100, 83-9-22.4787-14.8238+2.5, 171.6889),
            Line(83-9-22.4787-14.8238-14.8238+2.5, 100, 83-9-22.4787-14.8238-14.8238+2.5, 171.6889))
rHanger = Group(Rect(400-79.4654, 300-71.6889, 79.4654, 71.6889, border = "red", fill = None),
            Line(400-83, 400-100, 400-83, 400-171.6889),
            Line(400-83+9+22.4787-2.5, 400-100, 400-83+22.4787+9-2.5, 400-171.6889),
            Line(400-83+9+22.4787+14.8238-2.5, 400-100, 400-83+9+22.4787+14.8238-2.5, 400-171.6889),
            Line(400-83+9+22.4787+14.8238+14.8238-2.5, 400-100, 400-83+9+22.4787+14.8238+14.8238-2.5, 400-171.6889))


bCargoLine = Line(7.407, 258-22.22, 7.407, 258)
rCargoLine = Line(400-7.407, 164-22.22, 400-7.407, 164)


Label("Score", 200, 30, size = 30)
bScore = Label(0, 120, 30, fill = "blue", size =30)
rScore = Label(0, 280, 30, fill = "red", size =30)

bs1 = Label("+1", 50, 65, fill = "blue", size = 20)
bs2 = Label("+2", 85, 65, fill = "blue", size = 20)
bs4 = Label("+4", 120, 65, fill = "blue", size = 20)
bs5 = Label("+5", 155, 65, fill = "blue", size = 20)


rs1 = Label("+1", 245, 65, fill = "red", size = 20)
rs2 = Label("+2", 280, 65, fill = "red", size = 20)
rs4 = Label("+4", 315, 65, fill = "red", size = 20)
rs5 = Label("+5", 350, 65, fill = "red", size = 20)

balls = []
def ball(x, y, color):
    b = Circle(x, y, 5, fill = color)
    balls.append(b)
ball(145, 130, "red")
ball(120, 155, "blue")
ball(120, 250, "blue")
ball(106, 211, "red")
ball(220, 285, "red")
ball(180, 285, "blue")
ball(220, 115, "red")
ball(180, 115, "blue")
ball(280, 150, "red")
ball(294, 189, "blue")
ball(255, 270, "blue")
ball(280, 245, "red")





blues = []
bBot1 = Group(Rect(145, 180, 20, 20, fill = "blue"),
        Label("1", 155, 190, fill = "white", bold = True))
bBot2 = Group(Rect(150, 223, 20, 20, fill = "blue"),
        Label("2", 160, 233, fill = "white", bold = True))
bBot3 = Group(Rect(187, 235, 20, 20, fill = "blue"),
        Label("3", 197, 245, fill = "white", bold = True))
blues.append(bBot1)
blues.append(bBot2)
blues.append(bBot3)


# out blues
outB = []
bBalls = []
ob1 = Group(Rect(20, 310, 20, 20, fill = "blue"),
        Label("1", 30, 320, fill = "white", bold = True))
bBalls1 = []
ob2 = Group(Rect(20, 340, 20, 20, fill = "blue"),
        Label("2", 30, 350, fill = "white", bold = True))
bBalls2 = []
ob3 = Group(Rect(20, 370, 20, 20, fill = "blue"),
        Label("3", 30, 380, fill = "white", bold = True))
bBalls3 = []
bBalls.append(bBalls1)
bBalls.append(bBalls2)
bBalls.append(bBalls3)
outB.append(ob1)
outB.append(ob2)
outB.append(ob2)


reds = []
rBot1 = Group(Rect(205, 145, 20, 20, fill = "red"),
        Label(1, 215, 155, fill = "white", bold = True))
rBot2 = Group(Rect(240, 180, 20, 20, fill = "red"),
        Label(2, 250, 190, fill = "white", bold = True))
rBot3 = Group(Rect(230, 215, 20, 20, fill = "red"),
        Label(3, 240, 225, fill = "white", bold = True))
reds.append(rBot1)
reds.append(rBot2)
reds.append(rBot3)


# out reds
outR = []
rBalls = []
or1 = Group(Rect(220, 310, 20, 20, fill = "red"),
        Label(1, 230, 320, fill = "white", bold = True))
rBalls1 = []
or2 = Group(Rect(220, 340, 20, 20, fill = "red"),
        Label(2, 230, 350, fill = "white", bold = True))
rBalls2 = []
or3 = Group(Rect(220, 370, 20, 20, fill = "red"),
        Label(3, 230, 380, fill = "white", bold = True))
rBalls3 = []
rBalls.append(rBalls1)
rBalls.append(rBalls2)
rBalls.append(rBalls3)
outR.append(or1)
outR.append(or3)
outR.append(or3)

app.bb = False
app.rb = False

app.color = "blue"
app.num = 0
def onMousePress(mouseX, mouseY):
    
    if (app.rb==True):
        app.rb = False
        ball(mouseX, mouseY, "red")
    if (app.bb==True):
        app.bb = False
        ball(mouseX, mouseY, "blue")
    
    if (bBot1.hits(mouseX, mouseY)):
        app.color = "blue"
        app.num = 0
    elif (bBot2.hits(mouseX, mouseY)):
        app.color = "blue"
        app.num = 1
    elif (bBot3.hits(mouseX, mouseY)):
        app.color = "blue"
        app.num = 2
    elif (rBot1.hits(mouseX, mouseY)):
        app.color = "red"
        app.num = 0
    elif (rBot2.hits(mouseX, mouseY)):
        app.color = "red"
        app.num = 1
    elif (rBot3.hits(mouseX, mouseY)):
        app.color = "red"
        app.num = 2
    
    elif (bs1.hits(mouseX, mouseY)):
        bScore.value+=1
    elif (bs2.hits(mouseX, mouseY)):
        bScore.value+=2
    elif (bs4.hits(mouseX, mouseY)):
        bScore.value+=4
    elif (bs5.hits(mouseX, mouseY)):
        bScore.value+=5
    elif (rs1.hits(mouseX, mouseY)):
        rScore.value+=1
    elif (rs2.hits(mouseX, mouseY)):
        rScore.value+=2
    elif (rs4.hits(mouseX, mouseY)):
        rScore.value+=4
    elif (rs5.hits(mouseX, mouseY)):
        rScore.value+=5
    
    
        
app.dy = 0
app.dx = 0
app.start = False
app.step = False
app.face = "right"
app.direction = 0
def onKeyPress(key):
    if (key == "r"):
        if (app.rb == True):
            app.rb = False
        if (app.rb == False):
            app.rb = True    
    if (key == "b"):
        if (app.rb == True):
            app.rb = False
        if (app.rb == False):
            app.bb = True
    if (app.color == "blue"):
        if (key=="right"):
            blues[app.num].centerX+=5
            app.face = "right"
        elif (key=="left"):
            blues[app.num].centerX-=5
            app.face = "left"
        elif (key=="up"):
            blues[app.num].centerY-=5
            app.face = "up"
        elif (key=="down"):
            blues[app.num].centerY+=5
            app.face = "down"
        
        
        if ((key == "1" or key == "2") and len(bBalls[app.num])>0):
            if (bBalls[app.num][0].fill == "blue"):
                bScore.value+=int(key)
                app.direction = random.randint(1, 4)
                balls.remove(bBalls[app.num][0])
                balls.append(bBalls[app.num][0])
                app.step = True
                app.y = 0
                app.x = 0
                if (app.direction==1):
                    bBalls[app.num][0].centerX = random.randint(155,191)
                    bBalls[app.num][0].centerY = random.randint(125,146)
                if (app.direction==2):
                    bBalls[app.num][0].centerX = random.randint(260,289)
                    bBalls[app.num][0].centerY = random.randint(157,192)
                if (app.direction==3):
                    bBalls[app.num][0].centerX = random.randint(210,245)
                    bBalls[app.num][0].centerY = random.randint(258,279)
                if (app.direction==4):
                    bBalls[app.num][0].centerX = random.randint(156,195)
                    bBalls[app.num][0].centerY = random.randint(134,147)
            else:
                if (key == "1"):
                    if (app.face == "right"):
                        if (reds[app.num].centerX+25<395):
                            bBalls[app.num][0].centerX=blues[app.num].centerX+25
                            bBalls[app.num][0].centerY=blues[app.num].centerY
                        else:
                            bBalls[app.num][0].centerX = 395
                            bBalls[app.num][0].centerY = blues[app.num].centerY
                    if (app.face == "left"):
                        if (reds[app.num].centerX-25>5):
                            bBalls[app.num][0].centerX=blues[app.num].centerX-25
                            bBalls[app.num][0].centerY=blues[app.num].centerY
                        else:
                            bBalls[app.num][0].centerX = 5
                            bBalls[app.num][0].centerY = blues[app.num].centerY
                    if (app.face == "up"):
                        if (reds[app.num].centerY-25>105):
                            bBalls[app.num][0].centerY=blues[app.num].centerY-25
                            bBalls[app.num][0].centerX=blues[app.num].centerX
                        else:
                            bBalls[app.num][0].centerY = 105
                            bBalls[app.num][0].centerX = blues[app.num].centerX
                    if (app.face == "down"):
                        if (reds[app.num].centerY+25<295):
                            bBalls[app.num][0].centerY=blues[app.num].centerY+25
                            bBalls[app.num][0].centerX=blues[app.num].centerX
                        else:
                            bBalls[app.num][0].centerY = 295
                            bBalls[app.num][0].centerX = blues[app.num].centerX
                elif (key=="2"):
                    if (app.face == "right"):
                        if (reds[app.num].centerX+app.max<395):
                            bBalls[app.num][0].centerX=blues[app.num].centerX+app.max
                            bBalls[app.num][0].centerY=blues[app.num].centerY
                        else:
                            bBalls[app.num][0].centerX = 395
                            bBalls[app.num][0].centerY = blues[app.num].centerY
                    if (app.face == "left"):
                        if (reds[app.num].centerX-app.max>5):
                            bBalls[app.num][0].centerX=blues[app.num].centerX-app.max
                            bBalls[app.num][0].centerY=blues[app.num].centerY
                        else:
                            bBalls[app.num][0].centerX = 5
                            bBalls[app.num][0].centerY = blues[app.num].centerY
                    if (app.face == "up"):
                        if (reds[app.num].centerY-app.max>105):
                            bBalls[app.num][0].centerY=blues[app.num].centerY-app.max
                            bBalls[app.num][0].centerX=blues[app.num].centerX
                        else:
                            bBalls[app.num][0].centerY = 105
                            bBalls[app.num][0].centerX = blues[app.num].centerX
                    if (app.face == "down"):
                        if (reds[app.num].centerY+app.max<295):
                            bBalls[app.num][0].centerY=blues[app.num].centerY+app.max
                            bBalls[app.num][0].centerX=blues[app.num].centerX
                        else:
                            bBalls[app.num][0].centerY = 295
                            bBalls[app.num][0].centerX = blues[app.num].centerX
            bBalls[app.num].remove(bBalls[app.num][0])
            if (len(bBalls[app.num])>0):
                bBalls[app.num][0].centerX -= 20

            
        for i in range(len(balls)):
            for a in range(len(blues)):
                if (balls[i].hitsShape(blues[a]) and len(bBalls[app.num])<2):
                    balls[i].centerY = 320 + 30*app.num
                    balls[i].centerX = 60 + 20*len(bBalls[app.num])
                    bBalls[app.num].append(balls[i])
                    
         
        
    elif (app.color == "red"):
        if (key=="right"):
            reds[app.num].centerX+=5
            app.face = "right"
        elif (key=="left"):
            reds[app.num].centerX-=5
            app.face = "left"
        elif (key=="up"):
            reds[app.num].centerY-=5
            app.face = "up"
        elif (key=="down"):
            reds[app.num].centerY+=5
            app.face = "down"

        elif ((key == "1" or key == "2" or key == "0") and len(rBalls[app.num])>0):
            if (rBalls[app.num][0].fill == "red"):
                rScore.value+=int(key)
                app.direction = random.randint(1, 4)
                balls.remove(rBalls[app.num][0])
                balls.append(rBalls[app.num][0])
                if (app.direction==1):
                    rBalls[app.num][0].centerX = random.randint(155,191)
                    rBalls[app.num][0].centerY = random.randint(125,146)
                if (app.direction==2):
                    rBalls[app.num][0].centerX = random.randint(260,289)
                    rBalls[app.num][0].centerY = random.randint(157,192)
                if (app.direction==3):
                    rBalls[app.num][0].centerX = random.randint(210,245)
                    rBalls[app.num][0].centerY = random.randint(258,279)
                if (app.direction==4):
                    rBalls[app.num][0].centerX = random.randint(156,195)
                    rBalls[app.num][0].centerY = random.randint(134,147)
            else:
                if (key == "1"):
                    if (app.face == "right"):
                        if (reds[app.num].centerX+25<395):
                            rBalls[app.num][0].centerX=reds[app.num].centerX+25
                            rBalls[app.num][0].centerY=reds[app.num].centerY
                        else:
                            rBalls[app.num][0].centerX = 395
                            rBalls[app.num][0].centerY = reds[app.num].centerY
                    if (app.face == "left"):
                        if (reds[app.num].centerX-25>5):
                            rBalls[app.num][0].centerX=reds[app.num].centerX-25
                            rBalls[app.num][0].centerY=reds[app.num].centerY
                        else:
                            rBalls[app.num][0].centerX = 5
                            rBalls[app.num][0].centerY = reds[app.num].centerY
                    if (app.face == "up"):
                        if (reds[app.num].centerY-25>105):
                            rBalls[app.num][0].centerY=reds[app.num].centerY-25
                            rBalls[app.num][0].centerX=reds[app.num].centerX
                        else:
                            rBalls[app.num][0].centerY = 105
                            rBalls[app.num][0].centerX = reds[app.num].centerX
                    if (app.face == "down"):
                        if (reds[app.num].centerY+25<295):
                            rBalls[app.num][0].centerY=reds[app.num].centerY+25
                            rBalls[app.num][0].centerX=reds[app.num].centerX
                        else:
                            rBalls[app.num][0].centerY = 295
                            rBalls[app.num][0].centerX = reds[app.num].centerX
                elif (key=="2"):
                    if (app.face == "right"):
                        if (reds[app.num].centerX+app.max<395):
                            rBalls[app.num][0].centerX=reds[app.num].centerX+app.max
                            rBalls[app.num][0].centerY=reds[app.num].centerY
                        else:
                            rBalls[app.num][0].centerX = 395
                            rBalls[app.num][0].centerY = reds[app.num].centerY
                    if (app.face == "left"):
                        if (reds[app.num].centerX-app.max>5):
                            rBalls[app.num][0].centerX=reds[app.num].centerX-app.max
                            rBalls[app.num][0].centerY=reds[app.num].centerY
                        else:
                            rBalls[app.num][0].centerX = 5
                            rBalls[app.num][0].centerY = reds[app.num].centerY
                    if (app.face == "up"):
                        if (reds[app.num].centerY-app.max>105):
                            rBalls[app.num][0].centerY=reds[app.num].centerY-app.max
                            rBalls[app.num][0].centerX=reds[app.num].centerX
                        else:
                            rBalls[app.num][0].centerY = 105
                            rBalls[app.num][0].centerX = reds[app.num].centerX
                    if (app.face == "down"):
                        if (reds[app.num].centerY+app.max<295):
                            rBalls[app.num][0].centerY=reds[app.num].centerY+app.max
                            rBalls[app.num][0].centerX=reds[app.num].centerX
                        else:
                            rBalls[app.num][0].centerY = 295
                            rBalls[app.num][0].centerX = reds[app.num].centerX

            rBalls[app.num].remove(rBalls[app.num][0])
            if (len(rBalls[app.num])>0):
                rBalls[app.num][0].centerX -= 20
        

            
        for i in range(len(balls)):
            for a in range(len(reds)):
                if (balls[i].hitsShape(reds[a]) and len(rBalls[app.num])<2):
                    balls[i].centerY = 320 + 30*app.num
                    balls[i].centerX = 260 + 20*len(rBalls[app.num])
                    rBalls[app.num].append(balls[i])
                    

#balls[len(balls)-1].centerX = app.x
#balls[len(balls)-1].centerY = app.y
#def onStep():
 #   if (app.step == True):
  #      balls[len(balls)-1].centerX = app.x
   #     balls[len(balls)-1].centerY = app.y
    #    if(app.direction==1):
     #       balls[len(balls)-1].centerX -= app.dx
      #      balls[len(balls)-1].centerY -= app.dy
       # elif(app.direction==2):
        #    balls[len(balls)-1].centerX += app.dx
         #   balls[len(balls)-1].centerY -= app.dy
        #elif(app.direction==3):
         #   balls[len(balls)-1].centerX += app.dx
          #  balls[len(balls)-1].centerY += app.dy
        #elif(app.direction==4):
         #   balls[len(balls)-1].centerX -= app.dx
          #  balls[len(balls)-1].centerY += app.dy
        #app.dx-=1
        #app.dy-=1
        #if (app.dx<0 and app.dy<0):
         #   app.step = False
